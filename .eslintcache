[{"/home/saad/Documents/react/confusion/src/reportWebVitals.js":"1","/home/saad/Documents/react/confusion/src/components/MainComponent.js":"2","/home/saad/Documents/react/confusion/src/components/HomeComponent.js":"3","/home/saad/Documents/react/confusion/src/shared/dishes.js":"4","/home/saad/Documents/react/confusion/src/components/FooterComponent.js":"5","/home/saad/Documents/react/confusion/src/components/ContactComponent.js":"6","/home/saad/Documents/react/confusion/src/components/DishdetailComponent.js":"7","/home/saad/Documents/react/confusion/src/redux/configureStore.js":"8","/home/saad/Documents/react/confusion/src/components/AboutComponent.js":"9","/home/saad/Documents/react/confusion/src/index.js":"10","/home/saad/Documents/react/confusion/src/shared/promotions.js":"11","/home/saad/Documents/react/confusion/src/components/HeaderComponent.js":"12","/home/saad/Documents/react/confusion/src/redux/dishes.js":"13","/home/saad/Documents/react/confusion/src/redux/promotions.js":"14","/home/saad/Documents/react/confusion/src/components/MenuComponent.js":"15","/home/saad/Documents/react/confusion/src/redux/comments.js":"16","/home/saad/Documents/react/confusion/src/redux/ActionTypes.js":"17","/home/saad/Documents/react/confusion/src/redux/ActionCreators.js":"18","/home/saad/Documents/react/confusion/src/shared/comments.js":"19","/home/saad/Documents/react/confusion/src/redux/leaders.js":"20"},{"size":362,"mtime":1611200651675,"results":"21","hashOfConfig":"22"},{"size":2597,"mtime":1617961250135,"results":"23","hashOfConfig":"22"},{"size":1409,"mtime":1617967904340,"results":"24","hashOfConfig":"22"},{"size":1448,"mtime":1612604443864,"results":"25","hashOfConfig":"22"},{"size":2774,"mtime":1612448381049,"results":"26","hashOfConfig":"22"},{"size":11137,"mtime":1617441618770,"results":"27","hashOfConfig":"22"},{"size":8141,"mtime":1617967486577,"results":"28","hashOfConfig":"22"},{"size":616,"mtime":1617959167798,"results":"29","hashOfConfig":"22"},{"size":4171,"mtime":1612895763844,"results":"30","hashOfConfig":"22"},{"size":639,"mtime":1612431241134,"results":"31","hashOfConfig":"22"},{"size":435,"mtime":1612604503272,"results":"32","hashOfConfig":"22"},{"size":2692,"mtime":1612605718364,"results":"33","hashOfConfig":"22"},{"size":635,"mtime":1617958852188,"results":"34","hashOfConfig":"22"},{"size":192,"mtime":1617702052477,"results":"35","hashOfConfig":"22"},{"size":2278,"mtime":1617967854692,"results":"36","hashOfConfig":"22"},{"size":515,"mtime":1617805680334,"results":"37","hashOfConfig":"22"},{"size":177,"mtime":1617875141746,"results":"38","hashOfConfig":"22"},{"size":899,"mtime":1617967958532,"results":"39","hashOfConfig":"22"},{"size":4117,"mtime":1612604535036,"results":"40","hashOfConfig":"22"},{"size":180,"mtime":1617702102693,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1x1ac26",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saad/Documents/react/confusion/src/reportWebVitals.js",[],["88","89"],"/home/saad/Documents/react/confusion/src/components/MainComponent.js",["90","91","92"],"import React, {Component, component} from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { addComment, fetchDishes } from '../redux/ActionCreators';\n\nconst mapStateToProps = state =>\n{\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = dispatch => \n({\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\n  fetchDishes: () => {dispatch(fetchDishes())}\n});\n\nclass Main extends Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  componentDidMount()\n  {\n    this.props.fetchDishes();\n  }\n\n  render()\n  {\n    const HomePage = () =>\n    {\n      return (\n        <Home\n          dish={this.props.dishes.dishes.filter( (dish) => dish.featured )[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMes}\n          promotion={this.props.promotions.filter( (promotion) => promotion.featured )[0]}\n          leader={this.props.leaders.filter( (leader) => leader.featured )[0]}\n        />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            isLoading={this.props.dishes.isLoading}\n            errMess={this.props.dishes.errMess}\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \n            addComment={this.props.addComment}\n          />\n      );\n    };\n    \n\n    return (\n        <div>\n          <Header />\n          <Switch>\n            <Route path='/home' component={HomePage} />\n            <Route exact path='/menu' component={ () => <Menu dishes={this.props.dishes} /> } />\n            <Route path='/menu/:dishId' component={DishWithId} />\n            <Route exact path='/contactus' component={Contact} />\n            <Route exact path='/aboutus' component={ () => <About leaders={this.props.leaders} /> } />\n          </Switch>\n          <Footer />\n        </div>\n    );\n  }\n}\n\n//connect to the store using connect function\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","/home/saad/Documents/react/confusion/src/components/HomeComponent.js",[],"/home/saad/Documents/react/confusion/src/shared/dishes.js",[],["93","94"],"/home/saad/Documents/react/confusion/src/components/FooterComponent.js",[],"/home/saad/Documents/react/confusion/src/components/ContactComponent.js",["95","96","97","98","99","100","101","102"],"import React, { Component } from 'react';\nimport {Breadcrumb, BreadcrumbItem,\n        Button, Row, Col, Label} from 'reactstrap';\nimport{Control, LocalForm, Errors} from 'react-redux-form';\nimport {Link} from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => (!(val) || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val));\n\nclass Contact extends Component \n{\n    constructor(props)\n    {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values)\n    {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n    }\n\n    render()\n    {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators = \n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'                                            \n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />  \n                                </Col>\n                            </Row>        \n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            />\n                                            {' '}\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                    <option>Tel.</option>\n                                    <option>Email</option>\n                                </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }        \n}\n\nexport default Contact;",["103","104"],"/home/saad/Documents/react/confusion/src/components/DishdetailComponent.js",["105","106","107"],"import React, { Component } from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle,\n        Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\n\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nclass CommentForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        //it works without binding!\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state=\n        {\n            isModalOpen: false\n        }\n    }\n\n    toggleModal = () =>\n    {\n        this.setState(\n            {\n                isModalOpen: !this.state.isModalOpen\n            }\n        )\n    }\n\n    handleSubmit(values)\n    {\n        this.toggleModal();\n        alert('hi');\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render()\n    {\n        return(\n            <React.Fragment>\n                <Button className=\"bg-white text-dark\" onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg mr-1\"/> \n                    Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\"\n                                    name=\"raring\" placeholder=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" \n                                    name=\"author\" placeholder=\"Your Name\" className=\"form-control\" \n                                    validators=\n                                    {{\n                                        minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'                                            \n                                        }} \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\"\n                                    name=\"comment\" rows=\"6\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\n    function RenderDish({dish})\n    {\n        return(\n            <Card>\n                <CardImg top src={dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        );\n    }\n\n    function RenderComments({commnets, addComment, dishId})\n    {        \n        if(commnets != null)\n        {\n            return (\n                <React.Fragment>\n                    <h4>Comments</h4>\n                    <div>\n                        {\n                            commnets.map( (comment) => \n                            {\n                                return(\n                                    <ul className=\"list-unstyled\">\n                                        <li> \n                                            <p> {comment.comment} </p>\n                                            <p> -- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date((Date.parse(comment.date)))) } </p>\n                                        </li>\n                                    </ul>\n                                );   \n                            })\n                        }\n                    </div>\n                    <CommentForm dishId={dishId} addComment={addComment} />\n                </React.Fragment>\n            );\n        }\n            \n        else\n            return(\n                <div></div>\n            );\n    }   \n\n    const DishDetail = (props) =>\n    {\n        if(props.isLoading)\n        {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.errMes)\n        {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4> {props.errMes} </h4>\n                    </div>\n                </div>\n            );\n        }\n        \n        else if(props.dish != null)\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">  \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderDish dish={props.dish} />\n                        </div> \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderComments commnets={props.comments}\n                                        addComment={props.addComment}\n                                        dishId={props.dish.id} />\n                        </div>\n                    </div>\n                </div>\n            );\n        else\n            return(\n                <div>hi</div>\n            );\n    }\n\nexport default DishDetail;","/home/saad/Documents/react/confusion/src/redux/configureStore.js",[],"/home/saad/Documents/react/confusion/src/components/AboutComponent.js",[],"/home/saad/Documents/react/confusion/src/index.js",[],"/home/saad/Documents/react/confusion/src/shared/promotions.js",[],"/home/saad/Documents/react/confusion/src/components/HeaderComponent.js",[],"/home/saad/Documents/react/confusion/src/redux/dishes.js",[],"/home/saad/Documents/react/confusion/src/redux/promotions.js",[],"/home/saad/Documents/react/confusion/src/components/MenuComponent.js",[],"/home/saad/Documents/react/confusion/src/redux/comments.js",[],"/home/saad/Documents/react/confusion/src/redux/ActionTypes.js",[],"/home/saad/Documents/react/confusion/src/redux/ActionCreators.js",[],"/home/saad/Documents/react/confusion/src/shared/comments.js",[],"/home/saad/Documents/react/confusion/src/redux/leaders.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"116","line":9,"column":24,"nodeType":"114","messageId":"115","endLine":9,"endColumn":32},{"ruleId":"117","severity":1,"message":"118","line":31,"column":3,"nodeType":"119","messageId":"120","endLine":34,"endColumn":4},{"ruleId":"108","replacedBy":"121"},{"ruleId":"110","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":64,"column":29,"nodeType":"125","endLine":64,"endColumn":71},{"ruleId":"126","severity":1,"message":"127","line":78,"column":37,"nodeType":"125","endLine":85,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":102,"column":37,"nodeType":"125","endLine":109,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":126,"column":37,"nodeType":"125","endLine":133,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":151,"column":37,"nodeType":"125","endLine":158,"endColumn":39},{"ruleId":"126","severity":1,"message":"128","line":175,"column":45,"nodeType":"125","endLine":178,"endColumn":47},{"ruleId":"126","severity":1,"message":"129","line":185,"column":33,"nodeType":"125","endLine":186,"endColumn":66},{"ruleId":"126","severity":1,"message":"130","line":195,"column":37,"nodeType":"125","endLine":197,"endColumn":68},{"ruleId":"108","replacedBy":"131"},{"ruleId":"110","replacedBy":"132"},{"ruleId":"126","severity":1,"message":"129","line":60,"column":37,"nodeType":"125","endLine":61,"endColumn":97},{"ruleId":"126","severity":1,"message":"127","line":73,"column":37,"nodeType":"125","endLine":78,"endColumn":42},{"ruleId":"126","severity":1,"message":"130","line":94,"column":37,"nodeType":"125","endLine":95,"endColumn":88},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["133"],["134"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["133"],["134"],"no-global-assign","no-unsafe-negation"]