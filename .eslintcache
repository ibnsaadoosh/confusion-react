[{"/home/saad/Documents/react/confusion/src/App.js":"1","/home/saad/Documents/react/confusion/src/reportWebVitals.js":"2","/home/saad/Documents/react/confusion/src/index.js":"3","/home/saad/Documents/react/confusion/src/components/MenuComponent.js":"4","/home/saad/Documents/react/confusion/src/shared/dishes.js":"5","/home/saad/Documents/react/confusion/src/components/DishdetailComponent.js":"6","/home/saad/Documents/react/confusion/src/components/MainComponent.js":"7","/home/saad/Documents/react/confusion/src/components/HeaderComponent.js":"8","/home/saad/Documents/react/confusion/src/components/FooterComponent.js":"9","/home/saad/Documents/react/confusion/src/components/HomeComponent.js":"10","/home/saad/Documents/react/confusion/src/components/ContactComponent.js":"11","/home/saad/Documents/react/confusion/src/shared/comments.js":"12","/home/saad/Documents/react/confusion/src/shared/leaders.js":"13","/home/saad/Documents/react/confusion/src/shared/promotions.js":"14","/home/saad/Documents/react/confusion/src/components/AboutComponent.js":"15","/home/saad/Documents/react/confusion/src/redux/configureStore.js":"16","/home/saad/Documents/react/confusion/src/redux/reducer.js":"17"},{"size":566,"mtime":1617052303400,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1611200651675,"results":"20","hashOfConfig":"19"},{"size":639,"mtime":1612431241134,"results":"21","hashOfConfig":"19"},{"size":1493,"mtime":1612887203168,"results":"22","hashOfConfig":"19"},{"size":1448,"mtime":1612604443864,"results":"23","hashOfConfig":"19"},{"size":2849,"mtime":1612871315477,"results":"24","hashOfConfig":"19"},{"size":2150,"mtime":1617054313390,"results":"25","hashOfConfig":"19"},{"size":2692,"mtime":1612605718364,"results":"26","hashOfConfig":"19"},{"size":2774,"mtime":1612448381049,"results":"27","hashOfConfig":"19"},{"size":1068,"mtime":1612606302108,"results":"28","hashOfConfig":"19"},{"size":11340,"mtime":1613488262693,"results":"29","hashOfConfig":"19"},{"size":4117,"mtime":1612604535036,"results":"30","hashOfConfig":"19"},{"size":2345,"mtime":1612604521324,"results":"31","hashOfConfig":"19"},{"size":435,"mtime":1612604503272,"results":"32","hashOfConfig":"19"},{"size":4171,"mtime":1612895763844,"results":"33","hashOfConfig":"19"},{"size":203,"mtime":1617051778682,"results":"34","hashOfConfig":"19"},{"size":395,"mtime":1617050993745,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"1x1ac26",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saad/Documents/react/confusion/src/App.js",["78"],"import React, {Component, component} from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component\n{\n  render()\n  {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>        \n      </Provider>\n    );\n  }\n}\n\nexport default App;","/home/saad/Documents/react/confusion/src/reportWebVitals.js",[],["79","80"],"/home/saad/Documents/react/confusion/src/index.js",[],["81","82"],"/home/saad/Documents/react/confusion/src/components/MenuComponent.js",[],["83","84"],"/home/saad/Documents/react/confusion/src/shared/dishes.js",[],["85","86"],"/home/saad/Documents/react/confusion/src/components/DishdetailComponent.js",[],["87","88"],"/home/saad/Documents/react/confusion/src/components/MainComponent.js",["89","90","91","92","93","94","95","96","97"],"import React, {Component, component} from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport {DISHES} from '../shared/dishes'\nimport {COMMENTS} from '../shared/comments';\nimport {PROMOTIONS} from '../shared/promotions';\nimport {LEADERS} from '../shared/leaders';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state =>\n{\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nclass Main extends Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const HomePage = () =>\n    {\n      return (\n        <Home\n          dish={this.props.dishes.filter( (dish) => dish.featured )[0]}\n          promotion={this.props.promotions.filter( (promotion) => promotion.featured )[0]}\n          leader={this.props.leaders.filter( (leader) => leader.featured )[0]}\n        />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\n      );\n    };\n    \n\n    return (\n        <div>\n          <Header />\n          <Switch>\n            <Route path='/home' component={HomePage} />\n            <Route exact path='/menu' component={ () => <Menu dishes={this.props.dishes} /> } />\n            <Route path='/menu/:dishId' component={DishWithId} />\n            <Route exact path='/contactus' component={Contact} />\n            <Route exact path='/aboutus' component={ () => <About leaders={this.props.leaders} /> } />\n          </Switch>\n          <Footer />\n        </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Main));\n","/home/saad/Documents/react/confusion/src/components/HeaderComponent.js",[],"/home/saad/Documents/react/confusion/src/components/FooterComponent.js",[],"/home/saad/Documents/react/confusion/src/components/HomeComponent.js",[],"/home/saad/Documents/react/confusion/src/components/ContactComponent.js",["98","99"],"import React, { Component } from 'react';\nimport {Breadcrumb, BreadcrumbItem,\n        Button, Form, FormGroup, Label, Input, Col,\n        Row, FormFeedback} from 'reactstrap';\n\nimport {Link} from 'react-router-dom';\n\nclass Contact extends Component \n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state =\n        {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: \n            {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    handleBlur = (field) => (evt) =>\n    {\n        this.setState({\n            touched: {...this.state.touched, [field] : true}\n        });\n    }\n\n    handleInputChange(event)\n    {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState(\n            {\n                [name]: value\n            }\n        );\n    }\n\n    handleSubmit(event)\n    {\n        console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n\n    validate(firstname, lastname, telnum, email)\n    {\n        const errors =\n        {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: ''\n        };\n\n        if(this.state.touched.firstname && firstname.length < 3)\n            errors.firstname = 'Fisrt Name should be >= 3 characters';\n        else if(this.state.touched.firstname && firstname.length > 10)\n            errors.firstname = 'First Name should be <= 10 characters';\n        \n        if(this.state.touched.lastname && lastname.length < 3)\n            errors.lastname = 'Last Name should be >= 3 characters';\n        else if(this.state.touched.lastname && lastname.length > 10)\n            errors.lastname = 'Last Name should be <= 10 characters';\n        \n        const reg = /^\\d+$/;\n        if(this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum = 'Tel. Number should contain only numbers';\n  \n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\n            errors.email = 'Email should contain a @';\n        \n        return errors;\n    }\n\n    render()\n    {\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstname}\n                                        valid={errors.firstname === '' && this.state.touched.firstname}\n                                        invalid={errors.firstname !== ''}\n                                        onBlur={this.handleBlur('firstname')}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastname}\n                                        valid={errors.lastname === '' && this.state.touched.lastname}\n                                        invalid={errors.lastname !== ''}\n                                        onBlur={this.handleBlur('lastname')}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        value={this.state.telnum}\n                                        valid={errors.telnum === '' && this.state.touched.telnum}\n                                        invalid={errors.telnum !== ''}\n                                        onBlur={this.handleBlur('telnum')}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        valid={errors.email === '' && this.state.touched.email}\n                                        invalid={errors.email !== ''}\n                                        onBlur={this.handleBlur('email')}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>        \n                            <FormGroup row>\n                                <Col md={{size: 6, offset: 2}}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\"\n                                                name=\"agree\"\n                                                checked={this.state.agree}\n                                                onChange={this.handleInputChange}\n                                            />\n                                            {' '}\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </FormGroup>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Input type=\"select\"\n                                        name=\"contactType\"\n                                        value={this.state.contactType}\n                                        onChange={this.handleInputChange}\n                                    >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        value={this.state.message}\n                                        onChange={this.handleInputChange}\n                                    ></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }        \n}\n\nexport default Contact;","/home/saad/Documents/react/confusion/src/shared/comments.js",[],"/home/saad/Documents/react/confusion/src/shared/leaders.js",[],"/home/saad/Documents/react/confusion/src/shared/promotions.js",[],"/home/saad/Documents/react/confusion/src/components/AboutComponent.js",[],"/home/saad/Documents/react/confusion/src/redux/configureStore.js",[],"/home/saad/Documents/react/confusion/src/redux/reducer.js",[],{"ruleId":"100","severity":1,"message":"101","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"104","replacedBy":"108"},{"ruleId":"106","replacedBy":"109"},{"ruleId":"104","replacedBy":"110"},{"ruleId":"106","replacedBy":"111"},{"ruleId":"104","replacedBy":"112"},{"ruleId":"106","replacedBy":"113"},{"ruleId":"104","replacedBy":"114"},{"ruleId":"106","replacedBy":"115"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"116","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"100","severity":1,"message":"117","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":28},{"ruleId":"100","severity":1,"message":"118","line":8,"column":9,"nodeType":"102","messageId":"103","endLine":8,"endColumn":15},{"ruleId":"100","severity":1,"message":"119","line":9,"column":9,"nodeType":"102","messageId":"103","endLine":9,"endColumn":17},{"ruleId":"100","severity":1,"message":"120","line":10,"column":9,"nodeType":"102","messageId":"103","endLine":10,"endColumn":19},{"ruleId":"100","severity":1,"message":"121","line":11,"column":9,"nodeType":"102","messageId":"103","endLine":11,"endColumn":16},{"ruleId":"100","severity":1,"message":"122","line":14,"column":24,"nodeType":"102","messageId":"103","endLine":14,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":29,"column":3,"nodeType":"125","messageId":"126","endLine":32,"endColumn":4},{"ruleId":"100","severity":1,"message":"127","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":130,"column":29,"nodeType":"130","endLine":130,"endColumn":71},"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],["131"],["132"],["131"],["132"],["131"],["132"],"'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'DISHES' is defined but never used.","'COMMENTS' is defined but never used.","'PROMOTIONS' is defined but never used.","'LEADERS' is defined but never used.","'Redirect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Row' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]