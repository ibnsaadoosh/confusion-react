[{"/home/saad/Documents/specialization/react/confusion/src/reportWebVitals.js":"1","/home/saad/Documents/specialization/react/confusion/src/components/MenuComponent.js":"2","/home/saad/Documents/specialization/react/confusion/src/components/HeaderComponent.js":"3","/home/saad/Documents/specialization/react/confusion/src/redux/forms.js":"4","/home/saad/Documents/specialization/react/confusion/src/redux/dishes.js":"5","/home/saad/Documents/specialization/react/confusion/src/redux/promotions.js":"6","/home/saad/Documents/specialization/react/confusion/src/shared/baseUrl.js":"7","/home/saad/Documents/specialization/react/confusion/src/shared/comments.js":"8","/home/saad/Documents/specialization/react/confusion/src/redux/ActionCreators.js":"9","/home/saad/Documents/specialization/react/confusion/src/redux/comments.js":"10","/home/saad/Documents/specialization/react/confusion/src/components/MainComponent.js":"11","/home/saad/Documents/specialization/react/confusion/src/components/HomeComponent.js":"12","/home/saad/Documents/specialization/react/confusion/src/redux/configureStore.js":"13","/home/saad/Documents/specialization/react/confusion/src/components/ContactComponent.js":"14","/home/saad/Documents/specialization/react/confusion/src/shared/leaders.js":"15","/home/saad/Documents/specialization/react/confusion/src/components/DishdetailComponent.js":"16","/home/saad/Documents/specialization/react/confusion/src/redux/leaders.js":"17","/home/saad/Documents/specialization/react/confusion/src/index.js":"18","/home/saad/Documents/specialization/react/confusion/src/components/AboutComponent.js":"19","/home/saad/Documents/specialization/react/confusion/src/redux/ActionTypes.js":"20","/home/saad/Documents/specialization/react/confusion/src/App.js":"21","/home/saad/Documents/specialization/react/confusion/src/shared/dishes.js":"22","/home/saad/Documents/specialization/react/confusion/src/components/LoadingComponent.js":"23","/home/saad/Documents/specialization/react/confusion/src/components/FooterComponent.js":"24"},{"size":362,"mtime":1611200651675,"results":"25","hashOfConfig":"26"},{"size":2333,"mtime":1618316291719,"results":"27","hashOfConfig":"26"},{"size":2692,"mtime":1612605718364,"results":"28","hashOfConfig":"26"},{"size":161,"mtime":1617970835622,"results":"29","hashOfConfig":"26"},{"size":657,"mtime":1618439723162,"results":"30","hashOfConfig":"26"},{"size":637,"mtime":1618440805171,"results":"31","hashOfConfig":"26"},{"size":48,"mtime":1618317470885,"results":"32","hashOfConfig":"26"},{"size":4117,"mtime":1612604535036,"results":"33","hashOfConfig":"26"},{"size":4696,"mtime":1618445175014,"results":"34","hashOfConfig":"26"},{"size":628,"mtime":1618445197102,"results":"35","hashOfConfig":"26"},{"size":4086,"mtime":1618847143712,"results":"36","hashOfConfig":"26"},{"size":1542,"mtime":1618440650703,"results":"37","hashOfConfig":"26"},{"size":823,"mtime":1617970844206,"results":"38","hashOfConfig":"26"},{"size":11188,"mtime":1618015882800,"results":"39","hashOfConfig":"26"},{"size":2345,"mtime":1612604521324,"results":"40","hashOfConfig":"26"},{"size":8181,"mtime":1618445610594,"results":"41","hashOfConfig":"26"},{"size":181,"mtime":1618326302315,"results":"42","hashOfConfig":"26"},{"size":639,"mtime":1612431241134,"results":"43","hashOfConfig":"26"},{"size":4171,"mtime":1612895763844,"results":"44","hashOfConfig":"26"},{"size":404,"mtime":1618075335853,"results":"45","hashOfConfig":"26"},{"size":566,"mtime":1617052303400,"results":"46","hashOfConfig":"26"},{"size":1448,"mtime":1612604443864,"results":"47","hashOfConfig":"26"},{"size":247,"mtime":1617959106626,"results":"48","hashOfConfig":"26"},{"size":2774,"mtime":1612448381049,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ycy1vu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/home/saad/Documents/specialization/react/confusion/src/reportWebVitals.js",[],["105","106"],"/home/saad/Documents/specialization/react/confusion/src/components/MenuComponent.js",[],["107","108"],"/home/saad/Documents/specialization/react/confusion/src/components/HeaderComponent.js",[],["109","110"],"/home/saad/Documents/specialization/react/confusion/src/redux/forms.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/dishes.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/promotions.js",[],"/home/saad/Documents/specialization/react/confusion/src/shared/baseUrl.js",[],"/home/saad/Documents/specialization/react/confusion/src/shared/comments.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/ActionCreators.js",["111"],"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\n\n//this is an addComment action\nexport const addComment = (comment) =>\n({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment //this is the standard aciton structure\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) =>\n{\n    const newComment =\n    {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments',\n                 {\n                     method: \"POST\",\n                     body: JSON.stringify(newComment),\n                     headers:\n                     {\n                         \"content-type\": \"application/json\"\n                     },\n                     credentials: \"same-origin\"\n                 }\n    )\n    .then(response =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error =>\n        {\n            throw error;\n        }\n    )\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => \n            {\n                console.log('post comments', error.message)\n                alert('Your comment could not be posted\\nError: ' + error.message);\n            }\n    )\n};\n\n//this is a thunk which returns a function instead of object\nexport const fetchDishes = () => (dispatch) =>\n{\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error =>\n        {\n            var errmess = new Error(error.message);\n            throw errmess;\n        }\n    )\n    .then(response => response.json())\n    .then(dishess => dispatch(addDishes(dishess)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () =>\n({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const addDishes = (dishes) =>\n({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const dishesFailed = (errmess) =>\n({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const fetchComments = () => (dispatch) =>\n{\n    return fetch(baseUrl + 'comments')\n    .then(response =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error: ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error =>\n        {\n            var errmess = new Error(error.message);\n            throw errmess;\n        }\n    )\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const addComments = (comments) =>\n({\n    type : ActionTypes.ADD_COMMENTS,\n    payload : comments\n});\n\nexport const commentsFailed = (errmess) =>\n({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const fetchPromos = () => (dispatch) =>\n{\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n    .then(response =>\n        {\n            if(response.ok)\n            {\n                return response;\n            }\n            else\n            {\n                var error = new Error('Error: ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error =>\n        {\n            var errmess = new Error(error.message);\n            throw errmess;\n        }\n    )\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () =>\n({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const addPromos = (promos) =>\n({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const promosFailed = (errmess) =>\n({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});","/home/saad/Documents/specialization/react/confusion/src/redux/comments.js",[],["112","113"],"/home/saad/Documents/specialization/react/confusion/src/components/MainComponent.js",["114","115","116"],"/home/saad/Documents/specialization/react/confusion/src/components/HomeComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/configureStore.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/ContactComponent.js",["117","118","119","120","121","122","123","124","125"],"/home/saad/Documents/specialization/react/confusion/src/shared/leaders.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/DishdetailComponent.js",["126","127","128"],"import React, { Component } from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle,\n        Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nclass CommentForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        //it works without binding!\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state=\n        {\n            isModalOpen: false\n        }\n    }\n\n    toggleModal = () =>\n    {\n        this.setState(\n            {\n                isModalOpen: !this.state.isModalOpen\n            }\n        )\n    }\n\n    handleSubmit(values)\n    {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render()\n    {\n        return(\n            <React.Fragment>\n                <Button className=\"bg-white text-dark\" onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg mr-1\"/> \n                    Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\"\n                                    name=\"raring\" placeholder=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" \n                                    name=\"author\" placeholder=\"Your Name\" className=\"form-control\" \n                                    validators=\n                                    {{\n                                        minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'                                            \n                                        }} \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\"\n                                    name=\"comment\" rows=\"6\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\n    function RenderDish({dish})\n    {\n        return(\n            <Card>\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        );\n    }\n\n    function RenderComments({commnets, postComment, dishId})\n    {        \n        if(commnets != null)\n        {\n            return (\n                <React.Fragment>\n                    <h4>Comments</h4>\n                    <div>\n                        {\n                            commnets.map( (comment) => \n                            {\n                                return(\n                                    <ul className=\"list-unstyled\">\n                                        <li> \n                                            <p> {comment.comment} </p>\n                                            <p> -- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date((Date.parse(comment.date)))) } </p>\n                                        </li>\n                                    </ul>\n                                );   \n                            })\n                        }\n                    </div>\n                    <CommentForm dishId={dishId} postComment={postComment} />\n                </React.Fragment>\n            );\n        }\n            \n        else\n            return(\n                <div></div>\n            );\n    }   \n\n    const DishDetail = (props) =>\n    {\n        if(props.isLoading)\n        {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.errMes)\n        {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4> {props.errMes} </h4>\n                    </div>\n                </div>\n            );\n        }\n        \n        else if(props.dish != null)\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">  \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderDish dish={props.dish} />\n                        </div> \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderComments commnets={props.comments}\n                                        postComment={props.postComment}\n                                        dishId={props.dish.id} />\n                        </div>\n                    </div>\n                </div>\n            );\n        else\n            return(\n                <div>hi</div>\n            );\n    }\n\nexport default DishDetail;","/home/saad/Documents/specialization/react/confusion/src/redux/leaders.js",[],"/home/saad/Documents/specialization/react/confusion/src/index.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/AboutComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/ActionTypes.js",[],"/home/saad/Documents/specialization/react/confusion/src/App.js",["129"],"import React, {Component, component} from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component\n{\n  render()\n  {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>        \n      </Provider>\n    );\n  }\n}\n\nexport default App;","/home/saad/Documents/specialization/react/confusion/src/shared/dishes.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/LoadingComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/FooterComponent.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"130","replacedBy":"136"},{"ruleId":"132","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},{"ruleId":"130","replacedBy":"142"},{"ruleId":"132","replacedBy":"143"},{"ruleId":"138","severity":1,"message":"144","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"145","line":9,"column":24,"nodeType":"140","messageId":"141","endLine":9,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":36,"column":3,"nodeType":"148","messageId":"149","endLine":39,"endColumn":4},{"ruleId":"138","severity":1,"message":"150","line":4,"column":31,"nodeType":"140","messageId":"141","endLine":4,"endColumn":38},{"ruleId":"151","severity":1,"message":"152","line":65,"column":29,"nodeType":"153","endLine":65,"endColumn":71},{"ruleId":"154","severity":1,"message":"155","line":79,"column":37,"nodeType":"153","endLine":86,"endColumn":39},{"ruleId":"154","severity":1,"message":"155","line":103,"column":37,"nodeType":"153","endLine":110,"endColumn":39},{"ruleId":"154","severity":1,"message":"155","line":127,"column":37,"nodeType":"153","endLine":134,"endColumn":39},{"ruleId":"154","severity":1,"message":"155","line":152,"column":37,"nodeType":"153","endLine":159,"endColumn":39},{"ruleId":"154","severity":1,"message":"156","line":176,"column":45,"nodeType":"153","endLine":179,"endColumn":47},{"ruleId":"154","severity":1,"message":"157","line":186,"column":33,"nodeType":"153","endLine":187,"endColumn":66},{"ruleId":"154","severity":1,"message":"158","line":196,"column":37,"nodeType":"153","endLine":198,"endColumn":68},{"ruleId":"154","severity":1,"message":"157","line":60,"column":37,"nodeType":"153","endLine":61,"endColumn":97},{"ruleId":"154","severity":1,"message":"155","line":73,"column":37,"nodeType":"153","endLine":78,"endColumn":42},{"ruleId":"154","severity":1,"message":"158","line":94,"column":37,"nodeType":"153","endLine":95,"endColumn":88},{"ruleId":"138","severity":1,"message":"144","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],["159"],["160"],"no-unused-vars","'DISHES' is defined but never used.","Identifier","unusedVar",["159"],["160"],"'component' is defined but never used.","'Redirect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]