[{"/home/saad/Documents/react/confusion/src/reportWebVitals.js":"1","/home/saad/Documents/react/confusion/src/components/MainComponent.js":"2","/home/saad/Documents/react/confusion/src/components/HomeComponent.js":"3","/home/saad/Documents/react/confusion/src/shared/dishes.js":"4","/home/saad/Documents/react/confusion/src/components/FooterComponent.js":"5","/home/saad/Documents/react/confusion/src/components/ContactComponent.js":"6","/home/saad/Documents/react/confusion/src/components/DishdetailComponent.js":"7","/home/saad/Documents/react/confusion/src/components/CommentFormComponent.js":"8","/home/saad/Documents/react/confusion/src/redux/configureStore.js":"9","/home/saad/Documents/react/confusion/src/components/AboutComponent.js":"10","/home/saad/Documents/react/confusion/src/components/MyModalComponent.js":"11","/home/saad/Documents/react/confusion/src/index.js":"12","/home/saad/Documents/react/confusion/src/shared/promotions.js":"13","/home/saad/Documents/react/confusion/src/components/HeaderComponent.js":"14","/home/saad/Documents/react/confusion/src/redux/dishes.js":"15","/home/saad/Documents/react/confusion/src/redux/promotions.js":"16"},{"size":362,"mtime":1611200651675,"results":"17","hashOfConfig":"18"},{"size":2150,"mtime":1617054313390,"results":"19","hashOfConfig":"18"},{"size":1068,"mtime":1612606302108,"results":"20","hashOfConfig":"18"},{"size":1448,"mtime":1612604443864,"results":"21","hashOfConfig":"18"},{"size":2774,"mtime":1612448381049,"results":"22","hashOfConfig":"18"},{"size":11137,"mtime":1617441618770,"results":"23","hashOfConfig":"18"},{"size":6994,"mtime":1617645679214,"results":"24","hashOfConfig":"18"},{"size":469,"mtime":1617456998806,"results":"25","hashOfConfig":"18"},{"size":487,"mtime":1617702273221,"results":"26","hashOfConfig":"18"},{"size":4171,"mtime":1612895763844,"results":"27","hashOfConfig":"18"},{"size":1263,"mtime":1617535874747,"results":"28","hashOfConfig":"18"},{"size":639,"mtime":1612431241134,"results":"29","hashOfConfig":"18"},{"size":435,"mtime":1612604503272,"results":"30","hashOfConfig":"18"},{"size":2692,"mtime":1612605718364,"results":"31","hashOfConfig":"18"},{"size":176,"mtime":1617702009685,"results":"32","hashOfConfig":"18"},{"size":192,"mtime":1617702052477,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1x1ac26",{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saad/Documents/react/confusion/src/reportWebVitals.js",[],["73","74"],"/home/saad/Documents/react/confusion/src/components/MainComponent.js",["75","76","77","78","79","80","81","82","83"],"import React, {Component, component} from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport {DISHES} from '../shared/dishes'\nimport {COMMENTS} from '../shared/comments';\nimport {PROMOTIONS} from '../shared/promotions';\nimport {LEADERS} from '../shared/leaders';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state =>\n{\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nclass Main extends Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const HomePage = () =>\n    {\n      return (\n        <Home\n          dish={this.props.dishes.filter( (dish) => dish.featured )[0]}\n          promotion={this.props.promotions.filter( (promotion) => promotion.featured )[0]}\n          leader={this.props.leaders.filter( (leader) => leader.featured )[0]}\n        />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\n      );\n    };\n    \n\n    return (\n        <div>\n          <Header />\n          <Switch>\n            <Route path='/home' component={HomePage} />\n            <Route exact path='/menu' component={ () => <Menu dishes={this.props.dishes} /> } />\n            <Route path='/menu/:dishId' component={DishWithId} />\n            <Route exact path='/contactus' component={Contact} />\n            <Route exact path='/aboutus' component={ () => <About leaders={this.props.leaders} /> } />\n          </Switch>\n          <Footer />\n        </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Main));\n","/home/saad/Documents/react/confusion/src/components/HomeComponent.js",[],["84","85"],"/home/saad/Documents/react/confusion/src/shared/dishes.js",[],"/home/saad/Documents/react/confusion/src/components/FooterComponent.js",[],["86","87"],"/home/saad/Documents/react/confusion/src/components/ContactComponent.js",["88","89","90","91","92","93","94","95"],"import React, { Component } from 'react';\nimport {Breadcrumb, BreadcrumbItem,\n        Button, Row, Col, Label} from 'reactstrap';\nimport{Control, LocalForm, Errors} from 'react-redux-form';\nimport {Link} from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => (!(val) || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val));\n\nclass Contact extends Component \n{\n    constructor(props)\n    {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values)\n    {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n    }\n\n    render()\n    {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators = \n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'                                            \n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />  \n                                </Col>\n                            </Row>        \n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            />\n                                            {' '}\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                    <option>Tel.</option>\n                                    <option>Email</option>\n                                </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }        \n}\n\nexport default Contact;","/home/saad/Documents/react/confusion/src/components/DishdetailComponent.js",["96","97","98"],"import React, { Component } from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle,\n        Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\n\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nclass CommentForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state=\n        {\n            modalOpen: false\n        }\n    }\n\n    handleToggle = () =>\n    {\n        this.setState(\n            {\n                modalOpen: !this.state.modalOpen\n            }\n        )\n    }\n\n    render()\n    {\n        return(\n            <React.Fragment>\n                <Button className=\"bg-white text-dark\" onClick={this.handleToggle}>\n                    <i className=\"fa fa-pencil fa-lg mr-1\"/> \n                    Submit Comment\n                </Button>\n                <Modal isOpen={this.state.modalOpen} toggle={this.handleToggle}>\n                    <ModalHeader toggle={this.handleToggle}>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\"\n                                    name=\"raring\" placeholder=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" \n                                    name=\"author\" placeholder=\"Your Name\" className=\"form-control\" \n                                    validators=\n                                    {{\n                                        minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'                                            \n                                        }} \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\"\n                                    name=\"comment\" rows=\"6\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\n    function RenderDish({dish})\n    {\n        return(\n            <Card>\n                <CardImg top src={dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        );\n    }\n\n    function RenderComments({commnets})\n    {        \n        if(commnets != null)\n        {\n            return (\n                <React.Fragment>\n                    <h4>Comments</h4>\n                    <div>\n                        {\n                            commnets.map( (comment) => \n                            {\n                                return(\n                                    <ul className=\"list-unstyled\">\n                                        <li> \n                                            <p> {comment.comment} </p>\n                                            <p> -- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date((Date.parse(comment.date)))) } </p>\n                                        </li>\n                                    </ul>\n                                );   \n                            })\n                        }\n                    </div>\n                    <CommentForm />\n                </React.Fragment>\n            );\n        }\n            \n        else\n            return(\n                <div></div>\n            );\n    }   \n\n    const DishDetail = (props) =>\n    {\n        if(props.dish != null)\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">  \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderDish dish={props.dish} />\n                        </div> \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderComments commnets={props.comments} />\n                        </div>\n                    </div>\n                </div>\n            );\n        else\n            return(\n                <div>hi</div>\n            );\n    }\n\nexport default DishDetail;","/home/saad/Documents/react/confusion/src/components/CommentFormComponent.js",["99","100","101","102"],"import React, {Component} from 'react';\nimport {Button} from 'reactstrap';\n\nconst [modalIsOpen,setIsOpen] = React.useState(false);\n\nclass CommentForm extends Component\n{\n    render()\n    {\n        return(\n            <div>\n                <Button>\n                    <i className=\"fa fa-edit fa-lg mr-1\"/> \n                        Submit Comment\n                </Button>\n                <OpenModal />\n            </div>\n        );\n    }\n}\n\nexport default CommentForm;","/home/saad/Documents/react/confusion/src/redux/configureStore.js",[],"/home/saad/Documents/react/confusion/src/components/AboutComponent.js",[],"/home/saad/Documents/react/confusion/src/components/MyModalComponent.js",[],"/home/saad/Documents/react/confusion/src/index.js",[],"/home/saad/Documents/react/confusion/src/shared/promotions.js",[],"/home/saad/Documents/react/confusion/src/components/HeaderComponent.js",[],"/home/saad/Documents/react/confusion/src/redux/dishes.js",[],"/home/saad/Documents/react/confusion/src/redux/promotions.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":15},{"ruleId":"107","severity":1,"message":"112","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":28},{"ruleId":"107","severity":1,"message":"113","line":8,"column":9,"nodeType":"109","messageId":"110","endLine":8,"endColumn":15},{"ruleId":"107","severity":1,"message":"114","line":9,"column":9,"nodeType":"109","messageId":"110","endLine":9,"endColumn":17},{"ruleId":"107","severity":1,"message":"115","line":10,"column":9,"nodeType":"109","messageId":"110","endLine":10,"endColumn":19},{"ruleId":"107","severity":1,"message":"116","line":11,"column":9,"nodeType":"109","messageId":"110","endLine":11,"endColumn":16},{"ruleId":"107","severity":1,"message":"117","line":14,"column":24,"nodeType":"109","messageId":"110","endLine":14,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":29,"column":3,"nodeType":"120","messageId":"121","endLine":32,"endColumn":4},{"ruleId":"103","replacedBy":"122"},{"ruleId":"105","replacedBy":"123"},{"ruleId":"103","replacedBy":"124"},{"ruleId":"105","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":64,"column":29,"nodeType":"128","endLine":64,"endColumn":71},{"ruleId":"129","severity":1,"message":"130","line":78,"column":37,"nodeType":"128","endLine":85,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":102,"column":37,"nodeType":"128","endLine":109,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":126,"column":37,"nodeType":"128","endLine":133,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":151,"column":37,"nodeType":"128","endLine":158,"endColumn":39},{"ruleId":"129","severity":1,"message":"131","line":175,"column":45,"nodeType":"128","endLine":178,"endColumn":47},{"ruleId":"129","severity":1,"message":"132","line":185,"column":33,"nodeType":"128","endLine":186,"endColumn":66},{"ruleId":"129","severity":1,"message":"133","line":195,"column":37,"nodeType":"128","endLine":197,"endColumn":68},{"ruleId":"129","severity":1,"message":"132","line":47,"column":37,"nodeType":"128","endLine":48,"endColumn":97},{"ruleId":"129","severity":1,"message":"130","line":60,"column":37,"nodeType":"128","endLine":65,"endColumn":42},{"ruleId":"129","severity":1,"message":"133","line":81,"column":37,"nodeType":"128","endLine":82,"endColumn":88},{"ruleId":"107","severity":1,"message":"134","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},{"ruleId":"107","severity":1,"message":"135","line":4,"column":20,"nodeType":"109","messageId":"110","endLine":4,"endColumn":29},{"ruleId":"136","severity":2,"message":"137","line":4,"column":33,"nodeType":"138","endLine":4,"endColumn":47},{"ruleId":"139","severity":2,"message":"140","line":16,"column":18,"nodeType":"141","endLine":16,"endColumn":27},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'DISHES' is defined but never used.","'COMMENTS' is defined but never used.","'PROMOTIONS' is defined but never used.","'LEADERS' is defined but never used.","'Redirect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["142"],["143"],["142"],["143"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'modalIsOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"React.useState\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","MemberExpression","react/jsx-no-undef","'OpenModal' is not defined.","JSXIdentifier","no-global-assign","no-unsafe-negation"]