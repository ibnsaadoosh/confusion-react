[{"/home/saad/Documents/specialization/react/confusion/src/reportWebVitals.js":"1","/home/saad/Documents/specialization/react/confusion/src/components/MenuComponent.js":"2","/home/saad/Documents/specialization/react/confusion/src/components/HeaderComponent.js":"3","/home/saad/Documents/specialization/react/confusion/src/redux/forms.js":"4","/home/saad/Documents/specialization/react/confusion/src/redux/dishes.js":"5","/home/saad/Documents/specialization/react/confusion/src/redux/promotions.js":"6","/home/saad/Documents/specialization/react/confusion/src/shared/baseUrl.js":"7","/home/saad/Documents/specialization/react/confusion/src/shared/comments.js":"8","/home/saad/Documents/specialization/react/confusion/src/redux/ActionCreators.js":"9","/home/saad/Documents/specialization/react/confusion/src/redux/comments.js":"10","/home/saad/Documents/specialization/react/confusion/src/components/MainComponent.js":"11","/home/saad/Documents/specialization/react/confusion/src/components/HomeComponent.js":"12","/home/saad/Documents/specialization/react/confusion/src/redux/configureStore.js":"13","/home/saad/Documents/specialization/react/confusion/src/components/ContactComponent.js":"14","/home/saad/Documents/specialization/react/confusion/src/shared/leaders.js":"15","/home/saad/Documents/specialization/react/confusion/src/components/DishdetailComponent.js":"16","/home/saad/Documents/specialization/react/confusion/src/redux/leaders.js":"17","/home/saad/Documents/specialization/react/confusion/src/index.js":"18","/home/saad/Documents/specialization/react/confusion/src/components/AboutComponent.js":"19","/home/saad/Documents/specialization/react/confusion/src/redux/ActionTypes.js":"20","/home/saad/Documents/specialization/react/confusion/src/App.js":"21","/home/saad/Documents/specialization/react/confusion/src/shared/dishes.js":"22","/home/saad/Documents/specialization/react/confusion/src/components/LoadingComponent.js":"23","/home/saad/Documents/specialization/react/confusion/src/components/FooterComponent.js":"24"},{"size":362,"mtime":1611200651675,"results":"25","hashOfConfig":"26"},{"size":2121,"mtime":1618939704803,"results":"27","hashOfConfig":"26"},{"size":2692,"mtime":1612605718364,"results":"28","hashOfConfig":"26"},{"size":161,"mtime":1617970835622,"results":"29","hashOfConfig":"26"},{"size":657,"mtime":1618439723162,"results":"30","hashOfConfig":"26"},{"size":637,"mtime":1618440805171,"results":"31","hashOfConfig":"26"},{"size":48,"mtime":1618317470885,"results":"32","hashOfConfig":"26"},{"size":4117,"mtime":1612604535036,"results":"33","hashOfConfig":"26"},{"size":6793,"mtime":1618980876768,"results":"34","hashOfConfig":"26"},{"size":628,"mtime":1618445197102,"results":"35","hashOfConfig":"26"},{"size":3855,"mtime":1618980680396,"results":"36","hashOfConfig":"26"},{"size":1895,"mtime":1618938575422,"results":"37","hashOfConfig":"26"},{"size":823,"mtime":1617970844206,"results":"38","hashOfConfig":"26"},{"size":11090,"mtime":1618980801222,"results":"39","hashOfConfig":"26"},{"size":2345,"mtime":1612604521324,"results":"40","hashOfConfig":"26"},{"size":8706,"mtime":1618933547053,"results":"41","hashOfConfig":"26"},{"size":639,"mtime":1618959585066,"results":"42","hashOfConfig":"26"},{"size":639,"mtime":1612431241134,"results":"43","hashOfConfig":"26"},{"size":5452,"mtime":1618967776175,"results":"44","hashOfConfig":"26"},{"size":543,"mtime":1618959575342,"results":"45","hashOfConfig":"26"},{"size":566,"mtime":1617052303400,"results":"46","hashOfConfig":"26"},{"size":1448,"mtime":1612604443864,"results":"47","hashOfConfig":"26"},{"size":247,"mtime":1617959106626,"results":"48","hashOfConfig":"26"},{"size":2774,"mtime":1612448381049,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ycy1vu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/saad/Documents/specialization/react/confusion/src/reportWebVitals.js",[],["105","106"],"/home/saad/Documents/specialization/react/confusion/src/components/MenuComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/HeaderComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/forms.js",[],["107","108"],"/home/saad/Documents/specialization/react/confusion/src/redux/dishes.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/promotions.js",[],["109","110"],"/home/saad/Documents/specialization/react/confusion/src/shared/baseUrl.js",[],"/home/saad/Documents/specialization/react/confusion/src/shared/comments.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/ActionCreators.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/comments.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/MainComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/HomeComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/configureStore.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/ContactComponent.js",["111","112","113","114","115","116","117","118"],"import React, { Component } from 'react';\nimport {Breadcrumb, BreadcrumbItem,\n        Button, Row, Col, Label} from 'reactstrap';\nimport{Control, Form, Errors} from 'react-redux-form';\nimport {Link} from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => (!(val) || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val));\n\nclass Contact extends Component \n{\n    constructor(props)\n    {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values)\n    {\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render()\n    {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators = \n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'                                            \n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators=\n                                        {{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />  \n                                </Col>\n                            </Row>        \n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            />\n                                            {' '}\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                    <option>Tel.</option>\n                                    <option>Email</option>\n                                </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }        \n}\n\nexport default Contact;","/home/saad/Documents/specialization/react/confusion/src/shared/leaders.js",[],["119","120"],"/home/saad/Documents/specialization/react/confusion/src/components/DishdetailComponent.js",["121","122","123"],"import React, { Component } from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle,\n        Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nclass CommentForm extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        //it works without binding!\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state=\n        {\n            isModalOpen: false\n        }\n    }\n\n    toggleModal = () =>\n    {\n        this.setState(\n            {\n                isModalOpen: !this.state.isModalOpen\n            }\n        )\n    }\n\n    handleSubmit(values)\n    {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render()\n    {\n        return(\n            <React.Fragment>\n                <Button className=\"bg-white text-dark\" onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg mr-1\"/> \n                    Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Submit Comment\n                    </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\"\n                                    name=\"raring\" placeholder=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" \n                                    name=\"author\" placeholder=\"Your Name\" className=\"form-control\" \n                                    validators=\n                                    {{\n                                        minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages=\n                                        {{\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'                                            \n                                        }} \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\"\n                                    name=\"comment\" rows=\"6\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\n    function RenderDish({dish})\n    {\n        return(\n            <FadeTransform\n            in\n            transformProps=\n            {{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}\n            >\n                <Card>\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n\n        );\n    }\n\n    function RenderComments({commnets, postComment, dishId})\n    {        \n        if(commnets != null)\n        {\n            return (\n                <React.Fragment>\n                    <h4>Comments</h4>\n                    <div>\n                        <Stagger in>\n                            {commnets.map( (comment) => \n                                {\n                                    return(\n                                        <Fade in>\n                                            <ul className=\"list-unstyled\">\n                                                <li> \n                                                    <p> {comment.comment} </p>\n                                                    <p> -- {comment.author}, {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(new Date((Date.parse(comment.date)))) } </p>\n                                                </li>\n                                            </ul>\n                                        </Fade>\n\n                                    );   \n                                })}                                \n                        </Stagger>\n                    </div>\n                    <CommentForm dishId={dishId} postComment={postComment} />\n                </React.Fragment>\n            );\n        }\n            \n        else\n            return(\n                <div></div>\n            );\n    }   \n\n    const DishDetail = (props) =>\n    {\n        if(props.isLoading)\n        {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.errMes)\n        {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4> {props.errMes} </h4>\n                    </div>\n                </div>\n            );\n        }\n        \n        else if(props.dish != null)\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">  \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderDish dish={props.dish} />\n                        </div> \n                        <div className=\"col-12 col-md-5 m-1\">                 \n                            <RenderComments commnets={props.comments}\n                                        postComment={props.postComment}\n                                        dishId={props.dish.id} />\n                        </div>\n                    </div>\n                </div>\n            );\n        else\n            return(\n                <div>hi</div>\n            );\n    }\n\nexport default DishDetail;","/home/saad/Documents/specialization/react/confusion/src/redux/leaders.js",[],"/home/saad/Documents/specialization/react/confusion/src/index.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/AboutComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/redux/ActionTypes.js",[],"/home/saad/Documents/specialization/react/confusion/src/App.js",["124"],"import React, {Component, component} from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component\n{\n  render()\n  {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>        \n      </Provider>\n    );\n  }\n}\n\nexport default App;","/home/saad/Documents/specialization/react/confusion/src/shared/dishes.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/LoadingComponent.js",[],"/home/saad/Documents/specialization/react/confusion/src/components/FooterComponent.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"125","replacedBy":"131"},{"ruleId":"127","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":64,"column":29,"nodeType":"135","endLine":64,"endColumn":71},{"ruleId":"136","severity":1,"message":"137","line":78,"column":37,"nodeType":"135","endLine":85,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":102,"column":37,"nodeType":"135","endLine":109,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":126,"column":37,"nodeType":"135","endLine":133,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":151,"column":37,"nodeType":"135","endLine":158,"endColumn":39},{"ruleId":"136","severity":1,"message":"138","line":175,"column":45,"nodeType":"135","endLine":178,"endColumn":47},{"ruleId":"136","severity":1,"message":"139","line":185,"column":33,"nodeType":"135","endLine":186,"endColumn":66},{"ruleId":"136","severity":1,"message":"140","line":195,"column":37,"nodeType":"135","endLine":197,"endColumn":68},{"ruleId":"125","replacedBy":"141"},{"ruleId":"127","replacedBy":"142"},{"ruleId":"136","severity":1,"message":"139","line":61,"column":37,"nodeType":"135","endLine":62,"endColumn":97},{"ruleId":"136","severity":1,"message":"137","line":74,"column":37,"nodeType":"135","endLine":79,"endColumn":42},{"ruleId":"136","severity":1,"message":"140","line":95,"column":37,"nodeType":"135","endLine":96,"endColumn":88},{"ruleId":"143","severity":1,"message":"144","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],["147"],["148"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]